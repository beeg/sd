package es.deusto.ingenieria.sd.tralala.server.rmi;

import java.io.IOException;
import java.rmi.RemoteException;
import java.rmi.server.UnicastRemoteObject;
import java.util.List;

import javax.sound.sampled.UnsupportedAudioFileException;

import es.deusto.ingenieria.sd.tralala.server.SongByAlbum;
import es.deusto.ingenieria.sd.tralala.server.SongByArtist;
import es.deusto.ingenieria.sd.tralala.server.SongByTitle;
import es.deusto.ingenieria.sd.tralala.server.SongService;
import es.deusto.ingenieria.sd.tralala.server.UserService;
import es.deusto.ingenieria.sd.tralala.server.data.Recommendation;
import es.deusto.ingenieria.sd.tralala.server.data.dto.MemberAssembler;
import es.deusto.ingenieria.sd.tralala.server.data.dto.MemberDTO;
import es.deusto.ingenieria.sd.tralala.server.data.dto.SongAssembler;
import es.deusto.ingenieria.sd.tralala.server.data.dto.SongDTO;
import es.deusto.ingenieria.sd.tralala.server.data.dto.SongFileDTO;

public class UserSession extends UnicastRemoteObject implements IUserSession{

	private SongService songManager;
	private UserService userManager;
	private static final long serialVersionUID = 1L;

	public UserSession() throws RemoteException {
		super();
		userManager = new UserService();
		songManager = new SongService();
	}

	@Override
	public void sendRecommendation(String user, String friend, String songName) throws RemoteException{
		// TODO Auto-generated method stub
		//userManager.sendRecommendation(main, receiver, song);
	}

	@Override
	public void rejectRecommendation(String user, Recommendation recommendation) throws RemoteException{
		// TODO Auto-generated method stub
		//userManager.rejectRecommendation(main, recommendation);
	}

	@Override
	public void acceptRecommendation(String user, Recommendation recommendation) throws RemoteException{
		// TODO Auto-generated method stub
		//userManager.acceptRecommendation(main, recommendation);
	}
	
	@Override
	public void getRecommendations(String user) throws RemoteException{
		// TODO Auto-generated method stub
		//userManager.getRecommendations(main);
	}

	@Override
	public void addFriend(String user, String friend) throws RemoteException{
		// TODO Auto-generated method stub
		//userManager.addFriend(main, friend);
	}

	@Override
	public void removeFriend(String user, String friend) throws RemoteException{
		// TODO Auto-generated method stub
		//userManager.removeFriend(main, friend);
	}

	@Override
	public void acceptFriend(String user, String friend) throws RemoteException{
		// TODO Auto-generated method stub
		//userManager.acceptFriend(main, friend);
	}

	@Override
	public MemberDTO findUser(String username) throws RemoteException{
		// TODO Auto-generated method stub
		return MemberAssembler.assemble(userManager.findUser(username));
	}

	@Override
	public List<MemberDTO> getFriends(String user) throws RemoteException{
		// TODO Auto-generated method stub
		return MemberAssembler.assemble(userManager.getFriends(user));
	}

	@Override
	public MemberDTO login(String username, String password) throws RemoteException{		
		return MemberAssembler.assemble(userManager.login(username, password));
	}

	@Override
	public SongFileDTO play(String songTitle) throws RemoteException{
		try {
			return SongAssembler.assembleFile(this.songManager.play(songTitle));
		} catch (UnsupportedAudioFileException | IOException e) {
			System.out.println(e.getMessage());
			return null;
		}
	}

	@Override
	public List<SongDTO> getFavourites(String user) throws RemoteException{
		// TODO Auto-generated method stub
		return SongAssembler.assemble(songManager.getFavourites(user));
	}

	@Override
	public List<SongDTO> getPermanents(String user) throws RemoteException{
		// TODO Auto-generated method stub
		return SongAssembler.assemble(songManager.getPermanents(user));
	}

	@Override
	public List<SongDTO> getSongs() throws RemoteException{
		// TODO Auto-generated method stub
		return SongAssembler.assemble(songManager.getSongs());
	}
	
	//en base al strategy
	public List<SongDTO> findSongs(String name) throws RemoteException{ 
		// TODO Auto-generated method stub
		return SongAssembler.assemble(songManager.getMyStrategy().getSong(name));
	}

	@Override
	public void addFavourite(String user, String song) throws RemoteException{
		// TODO Auto-generated method stub
		this.userManager.addFavourite(user, song);
		
	}

	@Override
	public void removeFavourite(String user, String song) throws RemoteException{
		// TODO Auto-generated method stub
		this.userManager.removeFavourite(user, song);
	}

	@Override
	public void changePayment() throws RemoteException{
		// TODO Auto-generated method stub
		this.userManager.changePayment();
	}

	@Override
	public void addPayment() throws RemoteException{
		// TODO Auto-generated method stub
		this.userManager.addPayment();
	}

	@Override
	public void changePaymentType() throws RemoteException{
		// TODO Auto-generated method stub
		this.userManager.changePaymentType();
	}

	@Override
	public void getPayments(String user) throws RemoteException{
		// TODO Auto-generated method stub
		this.userManager.getPayments(user);
	}

	@Override
	public void getCurrentPayment(String user) throws RemoteException{
		// TODO Auto-generated method stub
		this.userManager.getCurrentPayment(user);
	}

	@Override
	public void logout(String user) throws RemoteException{
		// TODO Auto-generated method stub
		this.userManager.logout(user);
	}
	
	public void setStrategy(String strategy) throws RemoteException	{
		if(strategy.equals("title"))	{
			this.songManager.setMyStrategy(new SongByTitle());
		} else if(strategy.equals("artist"))	{
			this.songManager.setMyStrategy(new SongByArtist());
		} else { this.songManager.setMyStrategy(new SongByAlbum());	}
		
	}
}
